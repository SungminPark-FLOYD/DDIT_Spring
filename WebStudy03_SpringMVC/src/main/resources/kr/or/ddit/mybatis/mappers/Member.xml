<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- DAO 인터페이스의 quelifiedName을 따라가야함 -->
<mapper namespace="kr.or.ddit.member.dao.MemberDAO">
	<resultMap type="MemberVO" id="memberMap" autoMapping="true">
			<id property="memId" column="MEM_ID"/>
			<collection property="cart" ofType="CartVO" autoMapping="true">
				<association property="prod" javaType="ProdVO" autoMapping="true"/>
			</collection>
	<!-- 			<result property="LprodId" column="LPROD_ID"/> -->
	<!-- 		</association> -->
		</resultMap>
	<sql id="searchFrag">
		 <where>
		    <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchWord)">
			    <choose>
			    	<when test="simpleCondition.searchType eq 'memName'">
			    		INSTR(MEM_NAME, #{simpleCondition.searchWord}) > 0
			    	</when>
			    	<when test="simpleCondition.searchType eq 'memAdd1'">
			    		INSTR(MEM_ADD1, #{simpleCondition.searchWord}) > 0
			    	</when>
			    	<otherwise>
			    		INSTR(MEM_NAME, #{simpleCondition.searchWord}) > 0
			    		OR INSTR(MEM_ADD1, #{simpleCondition.searchWord}) > 0
			    	</otherwise>
			    </choose>
		    </if>
	    </where>
	</sql>
	<select id="selectTotalRecord" resultType="int" parameterType="kr.or.ddit.paging.PaginationInfo">
		SELECT COUNT(*)
		FROM MEMBER
	  <include refid="searchFrag"/>
	</select>
	
	<select id="selectMemberList" resultType="MemberVO" parameterType="kr.or.ddit.paging.PaginationInfo">
		WITH ORDERED AS (
			SELECT MEM_ID MEMID,  MEM_NAME, MEM_ADD1, MEM_ADD2,  MEM_HP , MEM_MAIL, MEM_MILEAGE   		
			        FROM MEMBER 
	        <include refid="searchFrag"/>  
	         ORDER BY MEMBER.ROWID DESC  
		), RNUMORDERED AS (
			SELECT ROWNUM RNUM, ORDERED.*
			FROM ORDERED
		)
		SELECT *
		FROM RNUMORDERED
		WHERE RNUM BETWEEN #{firstRecord} AND #{lastRecord}
		
<!-- 		SELECT B.* -->
<!-- 		FROM ( -->
<!-- 		SELECT ROWNUM RNUM, A.* -->
<!-- 			FROM( -->
<!-- 					SELECT MEM_ID MEMID,  MEM_NAME, MEM_ADD1, MEM_ADD2,  MEM_HP , MEM_MAIL, MEM_MILEAGE   		 -->
<!-- 			        FROM MEMBER  -->
<!--         <include refid="searchFrag"/>   -->
<!--          ORDER BY MEMBER.ROWID DESC   -->
<!--         ) A -->
<!-- 	 ) B  -->
<!-- 	  <![CDATA[ -->
<!-- 	 	WHERE RNUM >= #{firstRecord} AND RNUM <= #{lastRecord} -->
<!-- 	 ]]>     -->
	</select>
	
	<select id="selectMember" resultMap="memberMap" parameterType="string">
				WITH CART_VIEW AS (
				    SELECT CART_MEMBER, CART_PROD, CART_NO, TO_DATE(SUBSTR(CART_NO, 1, 8), 'YYYYMMDD') CART_DATE,
				    PROD_NAME, CART_QTY
				    FROM CART INNER JOIN PROD ON (CART_PROD = PROD_ID)
				)
				SELECT                                        										
				MEM_ID, MEM_PASS, MEM_NAME                     									
				, MEM_REGNO1, MEM_REGNO2, TO_CHAR(MEM_BIR, 'YYYY-MM-DD') MEM_BIR           		
				, MEM_ZIP, MEM_ADD1, MEM_ADD2                 										
				, MEM_HOMETEL, MEM_COMTEL, MEM_HP              									
				, MEM_MAIL, MEM_JOB, MEM_LIKE                 										
				, MEM_MEMORIAL, TO_CHAR(MEM_MEMORIALDAY, 'YYYY-MM-DD') MEM_MEMORIALDAY, MEM_MILEAGE
				, MEM_DELETE
				, MEM_ROLE 
				, MEM_IMG     
				, CART_PROD
				, CART_NO
                , PROD_NAME
                , CART_QTY
                , CART_DATE
				FROM MEMBER LEFT OUTER JOIN CART_VIEW ON (CART_MEMBER = MEM_ID)                                   									
				WHERE MEM_ID = #{memId}                     											
	</select>
	<insert id="insertMember" parameterType="MemberVO">
		INSERT INTO member (                             
							MEM_ID                                     
							,MEM_PASS                                   
							,MEM_NAME                                   
							,MEM_REGNO1                                 
							,MEM_REGNO2                                 
							,MEM_BIR                                    
							,MEM_ZIP                                    
							,MEM_ADD1                                   
							,MEM_ADD2                                   
							,MEM_HOMETEL                                
							,MEM_COMTEL                                 
							,MEM_HP                                     
							,MEM_MAIL                                   
							,MEM_JOB                                    
							,MEM_LIKE                                   
							,MEM_MEMORIAL                               
							,MEM_MEMORIALDAY                            
							,MEM_MILEAGE  
							<if test="memImg neq null and memImg.length gt 0">
								,MEM_IMG                              
							</if>
				) VALUES (   
						 #{memId, jdbcType=VARCHAR}
						, #{memPass, jdbcType=VARCHAR}
						, #{memName, jdbcType=VARCHAR}
						, #{memRegno1, jdbcType=CHAR}
						, #{memRegno2, jdbcType=CHAR}
						, #{memBir, jdbcType=DATE}
						, #{memZip, jdbcType=CHAR}
						, #{memAdd1, jdbcType=VARCHAR}
						, #{memAdd2, jdbcType=VARCHAR}
						, #{memHometel, jdbcType=VARCHAR}
						, #{memComtel, jdbcType=VARCHAR}
						, #{memHp, jdbcType=VARCHAR}
						, #{memMail, jdbcType=VARCHAR}
						, #{memJob, jdbcType=VARCHAR}
						, #{memLike, jdbcType=VARCHAR}
						, #{memMemorial, jdbcType=VARCHAR}
						, #{memMemorialday, jdbcType=DATE}
						, 3000
						<if test="memImg neq null and memImg.length gt 0">
							, #{memImg, jdbcType=BLOB}                          
						</if>
						
				)                                               
	</insert>
	<update id="update" parameterType="MemberVO">
		UPDATE MEMBER
		SET	
			MEM_NAME = #{memName, jdbcType=VARCHAR}
			, MEM_ZIP = #{memZip, jdbcType=CHAR}
			, MEM_ADD1 = #{memAdd1, jdbcType=VARCHAR}
			, MEM_ADD2 = #{memAdd2, jdbcType=VARCHAR}
			, MEM_HOMETEL = #{memHometel, jdbcType=VARCHAR}
			, MEM_COMTEL = #{memComtel, jdbcType=VARCHAR}
			, MEM_HP = #{memHp, jdbcType=VARCHAR}
			, MEM_MAIL = #{memMail, jdbcType=VARCHAR}
			, MEM_JOB = #{memJob, jdbcType=VARCHAR}
			, MEM_LIKE = #{memLike, jdbcType=VARCHAR}
			, MEM_MEMORIAL = #{memMemorial, jdbcType=VARCHAR}
			, MEM_MEMORIALDAY = #{memMemorialday, jdbcType=DATE}
			<if test="memImg neq null and memImg.length gt 0">
				, MEM_IMG = #{memImg, jdbcType=BLOB}                          
			</if>
		WHERE
			MEM_ID = #{memId, jdbcType=VARCHAR}
	</update>
	<update id="delete" parameterType="String">
		UPDATE MEMBER
		SET	
			MEM_DELETE = 'T'
		WHERE
			MEM_ID = #{memId, jdbcType=VARCHAR}
	</update>
	<select id="selectMemberForAuth" resultType="MemberVO">
		SELECT                                        										
				MEM_ID
				, MEM_PASS
				, MEM_NAME                     									
				,MEM_HP
				, MEM_MAIL  
				, MEM_DELETE  
				, MEM_ROLE                               											                                               									
				FROM MEMBER                                    									
				WHERE MEM_ID = #{memId}  
				AND MEM_DELETE IS NULL                      											
	</select>
</mapper>